version: 2
# Modified by SignalFx

defaults: &defaults
  working_directory: ~/signalfx-java-tracing
  resource_class: xlarge
  docker:
  - image: &default_container datadog/dd-trace-java-docker-build:latest

cache_keys: &cache_keys
  # Reset the cache approx every release
  keys:
  - signalfx-java-tracing-{{ checksum "signalfx-java-tracing.gradle" }}-{{ .Branch }}-{{ .Revision }}
  - signalfx-java-tracing-{{ checksum "signalfx-java-tracing.gradle" }}-{{ .Branch }}
  - signalfx-java-tracing-{{ checksum "signalfx-java-tracing.gradle" }}

jobs:
  build:
    <<: *defaults

    steps:
    - checkout

    - restore_cache:
        <<: *cache_keys

    - run:
        name: Build Project
        command: GRADLE_OPTS="-Dorg.gradle.jvmargs='-Xmx1G -Xms64M' -Ddatadog.forkedMaxHeapSize=1G -Ddatadog.forkedMinHeapSize=64M" ./gradlew clean :dd-java-agent:shadowJar --build-cache --stacktrace --no-daemon --parallel --max-workers=8

    - run:
        name: Collect Libs
        when: always
        command: .circleci/collect_libs.sh

    - store_artifacts:
        path: ./libs

    - persist_to_workspace:
        root: .
        paths:
        - .gradle
        - workspace

    - save_cache:
        key: signalfx-java-tracing-{{ checksum "signalfx-java-tracing.gradle" }}-{{ .Branch }}-{{ .Revision }}
        paths: ~/.gradle


  default_test_job: &default_test_job
    <<: *defaults

    docker:
    - image: *default_container
      # This is used by spymemcached instrumentation tests
    - image: memcached
      # This is used by rabbitmq instrumentation tests
    - image: rabbitmq

    steps:
    - checkout

    - attach_workspace:
        at: .

    - restore_cache:
        <<: *cache_keys

    - run:
        name: Run Tests
        command: GRADLE_OPTS="-Ddatadog.forkedMaxHeapSize=2G -Ddatadog.forkedMinHeapSize=64M" ./gradlew $TEST_TASK --build-cache --stacktrace --no-daemon --parallel --max-workers=4

    - run:
        name: Collect Reports
        when: on_fail
        command: .circleci/collect_reports.sh

    - store_artifacts:
        path: ./reports

    - run:
        name: Collect Test Results
        when: always
        command: .circleci/collect_results.sh

    - store_test_results:
        path: ./results

  test_7:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJava7

  test_8:
    <<: *default_test_job
    environment:
    # We are building on Java8, this is our default JVM so no need to set more homes
    - TEST_TASK: test jacocoTestReport jacocoTestCoverageVerification

  test_latest8:
    <<: *default_test_job
    environment:
    # We are building on Java8, this is our default JVM so no need to set more homes
    - TEST_TASK: latestDepTest

  test_ibm8:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJavaIBM8

  test_zulu8:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJavaZULU8

  test_9:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJava9

  test_10:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJava10

  test_11:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJava11

  test_zulu11:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJavaZULU11

  test_12:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJava12

  test_13:
    <<: *default_test_job
    environment:
    - TEST_TASK: testJava13

  agent_integration_tests:
    <<: *defaults
    docker:
    - image: *default_container
    - image: datadog/docker-dd-agent
      environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=invalid_key_but_this_is_fine
    steps:
    - checkout

    - attach_workspace:
        at: .

    - restore_cache:
        <<: *cache_keys

    - run:
        name: Run Trace Agent Tests
        command: ./gradlew traceAgentTest --build-cache --stacktrace --no-daemon --parallel --max-workers=4

    - run:
        name: Collect Reports
        when: on_fail
        command: .circleci/collect_reports.sh

    - store_artifacts:
        path: ./reports

    - run:
        name: Collect Test Results
        when: always
        command: .circleci/collect_results.sh

    - store_test_results:
        path: ./results

  check:
    <<: *defaults

    steps:
    - checkout

    - attach_workspace:
        at: .

    - restore_cache:
        <<: *cache_keys

    - run:
        name: Build Project
        command: GRADLE_OPTS="-Ddatadog.forkedMaxHeapSize=2G -Ddatadog.forkedMinHeapSize=64M" ./gradlew check -PskipTests --build-cache --stacktrace --no-daemon --parallel --max-workers=4

    - run:
        name: Collect Reports
        when: always
        command: .circleci/collect_reports.sh

    - store_artifacts:
        path: ./reports

  muzzle:
    <<: *defaults
    steps:
    - checkout

    - restore_cache:
        # Reset the cache approx every release
        keys:
        - signalfx-java-tracing-version-scan-{{ checksum "signalfx-java-tracing.gradle" }}

    - run:
        name: Verify Muzzle
        command: SKIP_BUILDSCAN="true" GRADLE_OPTS="-Dorg.gradle.jvmargs='-Xmx4G -Xms64M' -Ddatadog.forkedMaxHeapSize=4G -Ddatadog.forkedMinHeapSize=64M" ./gradlew muzzle --parallel --stacktrace --no-daemon --max-workers=12

    - save_cache:
        key: signalfx-java-tracing-version-scan-{{ checksum "signalfx-java-tracing.gradle" }}
        paths: ~/.gradle

workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build:
        filters:
          tags:
            only: /.*/

    - test_7:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_8:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_latest8:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_ibm8:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_zulu8:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_9:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_10:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_11:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_zulu11:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_12:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - test_13:
        requires:
        - build
        filters:
          tags:
            only: /.*/

    - agent_integration_tests:
        requires:
        - build
        filters:
          tags:
            only: /.*/

    - check:
        requires:
        - build
        filters:
          tags:
            only: /.*/

    - muzzle:
        requires:
        - build
        filters:
          branches:
            ignore: master
